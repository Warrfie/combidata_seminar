import re_generate
library = {}

library["cases"]["EXAMPLE"] = {
    "Correct": {  # Название подкейса, описывающего корректное поведение
        "value": r"[А-Яа-я]{1,50}",  # Регулярное выражение, определяющее генерацию значения для поля
        "gen_func": re_generate,  # Функция генерации значения на основе регулярного выражения
        "name": "Проверка поля EXAMPLE на корректное значение",  # Описание тестового случая
        "min_length": 1, # Дополнительные поля, которые могут быть использованы в процессе тестирования
        "max_length": 50
    },
    "None": {
        "is_presented": False,  # Поле должно быть отсутствующим
        "type": "error",  # Тип подкейса - ошибка
        "error": {"ERROR": "Неправильно заполнено поле EXAMPLE"},  # Описание ошибки для сравнения с ожидаемым результатом
        "name": "Проверка поля EXAMPLE на присутствие ошибки по обязательности поля",  # Описание тестового случая
    },
    "NCorrectValue": {
        "value": r"[А-Яа-я]{51,60}",  # Регулярное выражение, определяющее некорректное значение для поля
        "gen_func": re_generate,  # Функция генерации значения на основе регулярного выражения
        "type": "error",  # Тип подкейса - ошибка
        "error": {"ERROR": "Неправильно заполнено поле EXAMPLE"},  # Описание ошибки для сравнения с ожидаемым результатом
        "name": "Проверка поля EXAMPLE на присутствие ошибки по некорректному значению",  # Описание тестового случая
    },
    "NCorrectSy": {
        "value": r"[A-Za-z]{1,5}",  # Регулярное выражение, определяющее некорректные символы для поля
        "gen_func": re_generate,  # Функция генерации значения на основе регулярного выражения
        "type": "error",  # Тип подкейса - ошибка
        "error": {"ERROR": "Неправильно заполнено поле EXAMPLE"},  # Описание ошибки для сравнения с ожидаемым результатом
        "name": "Проверка поля EXAMPLE на присутствие ошибки по некорректным символам",  # Описание тестового случая
    },
}